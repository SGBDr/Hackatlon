SET search_path TO tuto;


-- Sch√©ma

DROP SCHEMA IF EXISTS tuto CASCADE;
CREATE SCHEMA tuto AUTHORIZATION tuto;
GRANT ALL PRIVILEGES ON SCHEMA tuto TO tuto;


-- Tables

CREATE TABLE compte (
	idcompte		INT				GENERATED BY DEFAULT AS IDENTITY,
	pseudo			VARCHAR(25)		NOT NULL,
	motdepasse		VARCHAR(25) 	NOT NULL,
	email			VARCHAR(100)	NOT NULL,
	UNIQUE (pseudo),
	PRIMARY KEY (idcompte)
);

CREATE TABLE role (
	idcompte		INT				NOT NULL,
	role			VARCHAR(20)		NOT NULL,
	CHECK( Role IN ('ADMINISTRATEUR','UTILISATEUR') ),	
	FOREIGN KEY (idcompte) REFERENCES compte (idcompte),
	PRIMARY KEY (idcompte, role)
);

CREATE TABLE categorie (
	idcategorie		INT				GENERATED BY DEFAULT AS IDENTITY,
	libelle			VARCHAR(25)		NOT NULL,
	debut			DATE,
	PRIMARY KEY (idcategorie)
);

CREATE TABLE personne (
	idpersonne		INT				GENERATED BY DEFAULT AS IDENTITY,
	idcategorie		INT				NOT NULL,
	nom				VARCHAR(25)  	NOT NULL,
	prenom			VARCHAR(25) 	NOT NULL,
 	FOREIGN KEY (idcategorie) REFERENCES categorie (idcategorie),
	PRIMARY KEY (idpersonne)
);

CREATE TABLE telephone (
	idtelephone		INT				GENERATED BY DEFAULT AS IDENTITY,
	idpersonne		INT			 	NOT NULL,
	Libelle			VARCHAR(25)		NOT NULL,
	Numero			VARCHAR(25)		NOT NULL,
	FOREIGN KEY (idpersonne) REFERENCES personne (idpersonne),
	PRIMARY KEY (idtelephone)
);

CREATE TABLE memo (
	idmemo		INT				GENERATED BY DEFAULT AS IDENTITY,
	titre			VARCHAR(50)		NOT NULL,
	description			VARCHAR(1000),
	flagurgent BOOLEAN NOT NULL,
	idcategorie	INT,
	FOREIGN KEY (idcategorie) REFERENCES categorie (idcategorie)
);


CREATE TABLE service (
	idservice		INT				GENERATED BY DEFAULT AS IDENTITY,
	nom			VARCHAR(50)		NOT NULL,
	anneecreation			INT,
	flagsiege BOOLEAN NOT NULL,
	idpersonne INT,
	FOREIGN KEY (idpersonne) REFERENCES personne (idpersonne)
);

